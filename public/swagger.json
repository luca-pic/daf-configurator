{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version" : "1.0.0",
    "title" : "Swagger Petstore",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache-2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath" : "/v2",
  "tags" : [ {
    "name" : "vocabulary",
    "description" : "Everything about your Vocabularies",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/vocabularies" : {
      "post" : {
        "tags" : [ "vocabulary" ],
        "summary" : "Add vocabulary",
        "description" : "",
        "operationId" : "addVoc",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Pet object that needs to be added to the store",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Vocabulary"
          }
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "x-contentType" : "application/json",
        "x-accepts" : "application/json"
      },
      "put" : {
        "tags" : [ "vocabulary" ],
        "summary" : "Update a vocabulary",
        "description" : "",
        "operationId" : "updateVoc",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Pet object that needs to be added to the store",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Vocabulary"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Vocabulary not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        },
        "x-contentType" : "application/json",
        "x-accepts" : "application/json"
      }
    },
    "/vocabulary/{vocId}" : {
      "get" : {
        "tags" : [ "Vocabulary" ],
        "summary" : "Find Vocabulary by ID",
        "description" : "Returns a single Vocabulary",
        "operationId" : "getVocById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vocId",
          "in" : "path",
          "description" : "ID of pet to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Vocabulary"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Vocabulary not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-accepts" : "application/json",
        "x-contentType" : "application/json"
      },
      "post" : {
        "tags" : [ "vocabulary" ],
        "summary" : "Updates a voc in the store with form data",
        "description" : "",
        "operationId" : "updateVocWithForm",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vocId",
          "in" : "path",
          "description" : "ID of pet that needs to be updated",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "Updated name of the pet",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "x-contentType" : "application/x-www-form-urlencoded",
        "x-accepts" : "application/json"
      },
      "delete" : {
        "tags" : [ "vocabulary" ],
        "summary" : "Deletes a vocabulary",
        "description" : "",
        "operationId" : "deleteVoc",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vocId",
          "in" : "path",
          "description" : "Voc id to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid pet value"
          }
        },
        "x-accepts" : "application/json"
      }
    }
  },
  "definitions" : {
    "Vocabulary" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string",
          "example" : "vocabularies"
        }
      },
      "title" : "a Vocabulary",
      "description" : "A vocabulary for standardization",
      "example" : {
        "name" : "ale",
        "id" : 0
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "string"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}